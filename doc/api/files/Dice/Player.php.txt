<?php
namespace Oliver\Dice;

/**
 *
 */
class Player
{
    private $score;
    private $round;
    private $name;
    private $dices;
    private $lastValues = [];


    public function __construct(string $name, array $dices)
    {
        $this->name = $name;
        $this->dices = $dices;
        $this->score = 0;
    }

    public function roll(int $amount) : array
    {
        $this->lastValues = [];
        for ($i=0; $i < $amount; $i++) {
            $this->lastValues[] = $this->dices[$i]->roll();
        }
        return $this->lastValues;
    }

    public function startNewRound()
    {
        $this->round = new Round();
    }



    public function play()
    {
        $this->roll(count($this->dices));
        $this->round->updateSerie($this->lastValues);
        $this->round->didPlayerLose($this->lastValues);
    }


    public function save()
    {
        $this->score += $this->round->getScore();
    }


    public function getLastGraphics() : array
    {
        return array_map(function ($val) {
            return "dice-" . $val;
        }, $this->lastValues);
    }






    public function getLastValues() : array
    {
        return $this->lastValues;
    }

    public function getLastScore() : int
    {
        return array_sum($this->lastValues);
    }

    public function getName() : string
    {
        return $this->name;
    }

    public function getScore() : int
    {
        return $this->score;
    }

    public function getRound() : object
    {
        return $this->round;
    }
}

